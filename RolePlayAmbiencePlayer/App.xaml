<Application x:Class="RolePlayAmbiencePlayer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RolePlayAmbiencePlayer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="StandardBackground" Color="#FF25272B"/>
        <SolidColorBrush x:Key="StandardBorder" Color="#FF6B6D71"/>
        <SolidColorBrush x:Key="StandardForeground" Color="LimeGreen" />
        <SolidColorBrush x:Key="HighlightBackground" Color="#FF4D4F53"/>
        <SolidColorBrush x:Key="HighlightBorder" Color="#009D9FA3"/>
        <SolidColorBrush x:Key="ScrollBarBackground" Color="#FF17181B" />
        <SolidColorBrush x:Key="ScrollBarThumbBorder" Color="#FF17181B" />
        <SolidColorBrush x:Key="ScrollBarThumbBackground" Color="LimeGreen" />
        <SolidColorBrush x:Key="ButtonOkBackground" Color="#FF202020" />
        <FontFamily x:Key="StandardFont">Roboto</FontFamily>

        <Style TargetType="TreeViewItem">
            <Setter Property="Foreground" Value="{StaticResource StandardForeground}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="FontFamily" Value="{StaticResource StandardFont}"/>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="FontFamily" Value="{StaticResource StandardFont}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid Name="Panel">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="{StaticResource StandardBorder}"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="{StaticResource HighlightBackground}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource StandardForeground}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!--#region ************** ContextMenu and items **************-->

        <Style TargetType="MenuItem">
            <Setter Property="Foreground" Value="{StaticResource StandardForeground}"/>
            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <!--Border 1-->
                        <Border x:Name="Border" Background="{StaticResource StandardBorder}" BorderThickness="1" SnapsToDevicePixels="True">
                            <Grid x:Name="Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Margin="6,0,0,2" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                                <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="2" Margin="8,1,8,1" x:Name="IGTHost" ContentSource="InputGestureText" VerticalAlignment="Center"/>
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" HorizontalOffset="-1" x:Name="SubMenuPopup" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True">
                                    <Grid Margin="0,0,5,5">
                                        <!--Border 2-->
                                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource StandardBorder}" BorderThickness="1" Background="{StaticResource StandardBackground}" SnapsToDevicePixels="True">
                                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="2">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </Grid>
                                            <Border.Effect>
                                                <DropShadowEffect Color="#808080" Opacity="0.60" ShadowDepth="3"/>
                                            </Border.Effect>
                                        </Border>
                                        <!--Border 3-->
                                        <Border Margin="1,0,0,0" x:Name="TransitionBorder" BorderBrush="{StaticResource StandardBorder}" BorderThickness="1" Background="{StaticResource StandardBackground}" SnapsToDevicePixels="True" Width="0" Height="2" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <!-- For top items with subitems -->
                                <Setter Property="Padding" Value="4,2,10,2"/>
                                <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                                <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                                <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                                <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2"/>
                                <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground}" />
                                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem"> 
                                <!-- For top items without subitems -->
                                <Setter Property="Padding" Value="4,2,6,2"/>
                                <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                                <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                                <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground}" />
                                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="10,3,0,3"/>
                                <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource StandardBackground}"/>
                                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="10,3,0,3"/>
                                <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource StandardBackground}"/>
                                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HighlightBorder}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Role" Value="TopLevelItem"/>
                                    <Condition Property="IsHighlighted" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource StandardBackground}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Role" Value="TopLevelHeader"/>
                                    <Condition Property="IsHighlighted" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource StandardBackground}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSubmenuOpen" Value="True"/>
                                    <Condition Property="Role" Value="TopLevelHeader"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource StandardBackground}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource StandardBorder}"/>
                            </MultiTrigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DarkGreen"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background"  Value="{StaticResource StandardBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource StandardForeground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource StandardBorder}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
            <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Uid="Border_93">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Padding" Value="0,0,5,5"/>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1"/>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Uid="Border_50">
                                <!-- This is it -->
                                <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5"/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- #endregion -->

        <!--#region ************** Slider **************-->

        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="1" BorderBrush="Black" Background="Black" Height="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="Green"  BorderThickness="1" BorderBrush="YellowGreen" Height="5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="15" Width="15" Fill="{StaticResource StandardForeground}"></Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- #endregion -->

        <!--#region ************** Scrollbar **************-->

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition Height="1" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="{StaticResource ScrollBarBackground}" />
                <Track Grid.Row="1" x:Name="PART_Track" IsDirectionReversed="true">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" BorderBrush="{DynamicResource ScrollBarThumbBorder}" Background="{DynamicResource ScrollBarThumbBackground}"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition Width="1" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="{StaticResource ScrollBarBackground}" />
                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" BorderBrush="{DynamicResource ScrollBarThumbBorder}" Background="{DynamicResource ScrollBarThumbBackground}"/>

                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Opacity" Value="1.0"></Setter>

            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
        Value="{TemplateBinding VerticalOffset}"
        Maximum="{TemplateBinding ScrollableHeight}"
        ViewportSize="{TemplateBinding ViewportHeight}"
        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
        Orientation="Horizontal"
        Grid.Row="1"
        Grid.Column="0"
        Value="{TemplateBinding HorizontalOffset}"
        Maximum="{TemplateBinding ScrollableWidth}"
        ViewportSize="{TemplateBinding ViewportWidth}"
        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        
        <!--#region ************** Buttons **************-->

        <Style x:Key="Button_Windows_Save" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonOkBackground}"/>
            <Setter Property="BorderBrush" Value="DarkGreen" />
            <Setter Property="Foreground" Value="{StaticResource StandardForeground}"/>
            <Setter Property="FontFamily" Value="{StaticResource StandardFont}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF313F31"/>
                    <Setter Property="BorderBrush" Value="LimeGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF111F11"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Button_Windows_Cancel" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonOkBackground}"/>
            <Setter Property="BorderBrush" Value="DarkRed" />
            <Setter Property="Foreground" Value="IndianRed"/>
            <Setter Property="FontFamily" Value="{StaticResource StandardFont}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3F3131"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF1F1111"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Button_LoopOff" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/LoopOff.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/LoopOffHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/LoopOffPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_LoopOn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/LoopOn.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/LoopOnHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/LoopOnPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_Prev" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/Prev.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/PrevHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/PrevPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_Play" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/Play.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/PlayHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/PlayPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_Pause" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/Pause.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/PauseHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/PausePressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_Next" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/Next.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/NextHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/NextPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_ShuffleOff" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/ShuffleOff.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/ShuffleOffHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/ShuffleOffPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_ShuffleOn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Normal" Source="/RolePlayAmbiencePlayer;component/Buttons/ShuffleOn.png" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Hover" Source="/RolePlayAmbiencePlayer;component/Buttons/ShuffleOnHover.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                            <Image Name="Pressed" Source="/RolePlayAmbiencePlayer;component/Buttons/ShuffleOnPressed.png" Visibility="Hidden" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"  Value="False">
                                <Setter TargetName="Normal" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Hover" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Pressed" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_AudioOn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Muted" Source="/RolePlayAmbiencePlayer;component/Buttons/Audio.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button_Muted" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Image Name="Muted" Source="/RolePlayAmbiencePlayer;component/Buttons/Muted.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

    </Application.Resources>
</Application>
